% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/long2wide_omv.R
\name{long2wide_omv}
\alias{long2wide_omv}
\title{Converts .omv-files for the statistical spreadsheet 'jamovi' (www.jamovi.org) from long to wide format}
\usage{
long2wide_omv(
  fleInp = "",
  fleOut = "",
  varID = "",
  varTme = "",
  varTgt = c(),
  varSep = ".",
  varOrd = c("times", "vars"),
  varSrt = c(),
  usePkg = c("haven", "foreign"),
  selSet = "",
  ...
)
}
\arguments{
\item{fleInp}{Name (including the path, if required) of the data file to be read ('FILENAME.omv'; default: '')}

\item{fleOut}{Name (including the path, if required) of the data file to be written ('FILENAME.omv'; default: ''); if empty, FILENAME from fleInp is extended with '_wide'}

\item{varID}{Names of one or more variables that identify the same group / individual (default: c())}

\item{varTme}{Name of the variable that differentiates multiple records from the same group / individual (default: '')}

\item{varTgt}{Names of one or more variables to be transformed / reshaped (other variables are excluded, if empty(c()) all variables except varTme and varID are included; default: c())}

\item{varSep}{Separator character when concatenating the fixed and time-varying part of the variable name ('VAR1.1', 'VAR1.2'; default: '.')}

\item{varOrd}{How variables / columns are organized: for 'times' (default) the steps of the time varying variable are adjacent, for 'vars' the steps of the original columns in the long dataset}

\item{varSrt}{Variable(s) that are used to sort the data frame (see Details; if empty, the order returned from reshape is kept; default: c())}

\item{usePkg}{Name of the package: 'haven' or 'foreign' that shall be used to read SPSS, Stata and SAS files; 'haven' is the default (it is more comprehensive), but with problems you may try 'foreign'}

\item{selSet}{Name of the data set that is to be selected from the workspace (only applies when reading .RData-files)}

\item{...}{Additional arguments passed on to methods; see Details below}
}
\description{
Converts .omv-files for the statistical spreadsheet 'jamovi' (www.jamovi.org) from long to wide format
}
\details{
The ellipsis-parameter (...) can be used to submit arguments / parameters to the functions that are used for transforming or reading the data. The transformation uses 'reshape'. When reading the
data, the functions are: 'read_omv' (for jamovi-files), 'read.table' (for CSV / TSV files; using similar defaults as 'read.csv' for CSV and 'read.delim' for TSV which both are based upon
'read.table' but with adjusted defaults for the respective file types), 'readRDS' (for rds-files), 'read_sav' (needs R-package 'haven') or 'read.spss' (needs R-package 'foreign') for SPSS-files,
'read_dta' ('haven') / 'read.dta' ('foreign') for Stata-files, 'read_sas' ('haven') for SAS-data-files, and 'read_xpt' ('haven') / 'read.xport' ('foreign') for SAS-transport-files.
Please note that the R-packages 'haven' and 'foreign' are not marked as 'Imports' (i.e., they are not installed by default). If you wish to convert files from SPSS, SAS or Stata and haven't installed
them yet, please install them manually (e.g., \code{install.packages('haven', dep = TRUE)}).
}
\examples{
\dontrun{
library(jmvReadWrite);
# generate a test dataframe with 100 (imaginary) participants / units of observation (ID), 8 measurement (Measure) of one variable (X)
dtaInp <- data.frame(ID = sort(rep(seq(1:100), 8)), Measure = rep(seq(1, 8), 100), X = runif(800, -10, 10));
cat(str(dtaInp));
# the output should look like this
# 'data.frame': 800 obs. of  3 variables:
#  $ ID     : int  1 1 1 1 1 1 1 1 2 2 ...
#  $ Measure: int  1 2 3 4 5 6 7 8 1 2 ...
#  $ X      : num  8.05 -3.88 4.99 -8.94 2.41 ...
# this data set is stored as (temporary) RDS-file and later processed by long2wide
nmeInp <- paste0(tempfile(), '.rds');
nmeOut <- paste0(tempfile(), '.omv');
saveRDS(dtaInp, nmeInp);
long2wide_omv(fleInp = nmeInp, fleOut = nmeOut, varID = "ID", varTme = "Measure", varTgt = "X");
# it is required to give at least the arguments fleInp, varID and varTme
# check whether the file was created and its size
print(list.files(dirname(nmeOut), basename(nmeOut)));
# -> "file[...].omv" ([...] contains a random combination of numbers / characters
print(file.info(nmeOut)$size);
# -> 6200 (size may differ on different OSes)
cat(str(read_omv(nmeOut, sveAtt = FALSE)));
# the data set is now transformed into wide (and each the measurements is now indicated as a suffix to X; X.1, X.2, ...)
# 'data.frame':	100 obs. of  9 variables:
#  $ ID : int  1 2 3 4 5 6 7 8 9 10 ...
#   ..- attr(*, "jmv-id")= logi TRUE
#   ..- attr(*, "missingValues")= list()
#  $ X.1: num  7.17 -3.23 8.51 7.39 6.91 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.2: num  -9.31 -9.37 8.34 -9.28 5.57 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.3: num  9.42 -2.93 -5.15 -5.6 -1.98 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.4: num  4.9 -2.26 4.34 -2.66 1.54 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.5: num  -4.53 -2.86 -3.02 -3.89 -8.47 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.6: num  3.54 9.2 1.09 4.56 7.46 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.7: num  -3.04 -2.33 4.86 3.99 9.13 ...
#   ..- attr(*, "missingValues")= list()
#  $ X.8: num  8.94 0.927 6.394 8.201 0.111 ...
#   ..- attr(*, "missingValues")= list()
# NB: the values in X.1, X.2, ... are randomly generated and therefore different from those on your screen 

unlink(nmeInp);
unlink(nmeOut);
}

}
